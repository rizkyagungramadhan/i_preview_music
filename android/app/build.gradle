def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    signingConfigs {
        release {
            storeFile file('./cert/key.jks')
            storePassword 'itunes1@#'
            keyAlias = 'key'
            keyPassword 'itunes1@#'
        }
        debug {
            storeFile file('./cert/key.jks')
            storePassword 'itunes1@#'
            keyAlias = 'key'
            keyPassword 'itunes1@#'
        }
    }

    compileSdkVersion sdk_version

    compileOptions {
        sourceCompatibility java_version
        targetCompatibility java_version
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "i.preview.music"
        minSdkVersion min_sdk_version
        targetSdkVersion sdk_version
        versionCode version_code
        versionName version_name
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${outputFileName.replace("app-", "itunes-music-preview-").replace("-", "_").replace(".apk", "")}-v${variant.versionName}.apk"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
